load("D:/Curro/Proyectos/Clasificacion Celulas/filtro Alpha compact/frames.RData")
load(FSA)
library(FSA)
View(myData0)
dunnTest(myData0[myData0$cell.number = 400,]$PE.dimension0, myData0[myData0$cell.number = 400,]$cell.type)
myData0[myData0$cell.number = 400,]
myData0[myData0$cell.number == 400,]
dunnTest(myData0[myData0$cell.number == 400,]$PE.dimension0, myData0[myData0$cell.number == 400,]$cell.type)
dunnTest(myData0[myData0$cell.number == 400,]$PE.dimension0, as.factor(myData0[myData0$cell.number == 400,]$cell.type)
)
dunnTest(as.factor(myData0[myData0$cell.number == 400,]$PE.dimension0), as.factor(myData0[myData0$cell.number == 400,]$cell.type))
myData0$PE.dimension0 <- as.factor(myData0$PE.dimension0)
myData0$PE.dimension0 =as.factor(myData0$PE.dimension0)
dunnTest(PE.dimension0, cell.type, myData0[myData0$cell.number == 400,])
dunnTest(PE.dimension0, cell.type, data = myData0[myData0$cell.number == 400,])
dunnTest(PE.dimension.0, cell.type, data = myData0[myData0$cell.number == 400,])
dunnTest(x = PE.dimension.0, g = cell.type, data = myData0[myData0$cell.number == 400,])
myData0$cell.type <- as.factor(myData0$cell.type)
dunnTest(x = PE.dimension.0, g = cell.type, data = myData0[myData0$cell.number == 400,])
dunnTest(x = PE.dimension.0, g = cell.type, myData0[myData0$cell.number == 400,])
dunnTest(PE.dimension.0, cell.type, myData0[myData0$cell.number == 400,])
dunnTest(myData0[myData0$cell.number == 400,]$PE.dimension.0, myData0[myData0$cell.number == 400,]$cell.type)
dunnTest(myData2500[myData2500$cell.number == 400,]$PE.dimension.0, myData2500[myData2500$cell.number == 400,]$cell.type)
dunnTest(myData0[myData0$cell.number == 400,]$PE.dimension.All, myData0[myData0$cell.number == 400,]$cell.type)
load("/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha compact/frames.RData")
pvalue.dWPvscNT0_1 <- c()
pvalue.cNTvsdWL0 <- c()
log2(0.4)
log2(-0.4)
2^0.4
load("D:/Curro/Proyectos/Clasificacion Celulas/filtro Alpha compact 250/frame.RData")
View(myData0)
myData0
myData0 <- data.frame(myData0, sum.length.0)
kruskal.test(myData0$sum.length.0, myData0$cell.type)
library(FSA)
dunnTest(myData0$sum.length.0, myData0$cell.type)
load("D:/Curro/Proyectos/Clasificacion Celulas/filtro Alpha compact 385/frame.RData")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1")
+ ylab("log2(p-value)") + xlab("number of cells")
library(ggplot2)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1")
+ ylab("log2(p-value)") + xlab("number of cells")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1")
+ ylab("log2(p-value)") + xlab("number of cells")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1")
+ ylab("log2(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),
axis.title=element_text(size=18,face="bold"))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1")
+ ylab("log2(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.titl=element_text(size=18,face="bold"))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1")
+ ylab("log2(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1") + ylab("log2(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1") + ylab("log2(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), title = element_text(size=18))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test for Persistent entropy of dimension 1") + ylab("log2(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=18))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log2(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=18))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=18))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=18), legend.text = "")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=18), legend = "")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=18), legend = "", legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=18), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=16,face="bold"), title = element_text(size=20), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), title = element_text(size=20), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), title = element_text(size=20), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), title = element_text(size=20), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), title = element_text(size=20), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=17,face="bold"), title = element_text(size=20), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), title = element_text(size=19), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), title = element_text(size=18), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16), guides(fill=FALSE))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16), guides(color=FALSE))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16), guides(colour=FALSE))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16), legend.position="none")
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16))
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=14),axis.title=element_text(size=18,face="bold"), title = element_text(size=16))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=18,face="bold"), title = element_text(size=16))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=18,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=20,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=16,face="bold"), title = element_text(size=20))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=18,face="bold"), title = element_text(size=19))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=18,face="bold"), title = element_text(size=19))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy0, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=18,face="bold"), title = element_text(size=19))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy0, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=18,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  kruskalwallis, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.entropy1, colour = "p-value")) + ggtitle("Kruskal-Wallis test PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.cNTvsdWL0, colour = "p-value")) + ggtitle("Dunn Test cNT vs dWL PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.cNTvsdWL0, colour = "p-value")) + ggtitle("Dunn: cNT vs dWL PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.cNTvsdWL0, colour = "p-value")) + ggtitle("Dunn cNT vs dWL PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.cNTvsdWL0, colour = "p-value")) + ggtitle("Dunn cNT vs dWL PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.cNTvsdWL1, colour = "p-value")) + ggtitle("Dunn cNT vs dWL PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.dWLvsdWP1, colour = "p-value")) + ggtitle("Dunn dWL vs dWP PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.dWLvsdWP0, colour = "p-value")) + ggtitle("Dunn dWL vs dWP PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.dWPvscNT0, colour = "p-value")) + ggtitle("Dunn dWPvscNT PE dimension 0") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
ima <- ggplot(data =  dunntestData, aes(x = number))
ima + geom_line(aes(y = log2(0.05), colour = "p=0.05")) + geom_line(aes(y = pvalue.dWPvscNT1, colour = "p-value")) + ggtitle("Dunn dWPvscNT PE dimension 1") + ylab("log(p-value)") + xlab("number of cells") + theme(axis.text=element_text(size=12),axis.title=element_text(size=19,face="bold"), title = element_text(size=18))+ guides(color = FALSE)
1+1
2+2
4+4
3+3
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
setwd("/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2")
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
5:13
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
source('generateBarcode.R')
i
type
barcode.list <- generateBarcode(name_cells = type, number_cells = i)
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFigures0.R')
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFigures0.R')
myData0
View(myData0)
myData0[cell.number==385,]
myData0[cell.number==385 && cell.type == dWP,]
myData0[cell.number==385 & cell.type == dWP,]
myData0[cell.number==385 & cell.type == "dWP",]
myData0[cell.number==385 && cell.type == "dWP",]
myData0[cell.number=385 && cell.type =="dWP",]
myData0[cell.number==385 && cell.type =="dWP",]$PE.dimension.0
myData0[cell.number==385,]
myData0[cell.type=="dWP",]
myData0[cell.type=='dWP',]
cell.type
cell.type[3500]
cell.type[[3500]]
cell.type[500]
cell.type[1500]
myData0[cell.type=='cNT',]
View(myData0)
myData0[cell.type=='cNT',]
myData0[cell.type=='dWL',]
myData0[cell.type=='dWP',]
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
myData0[cell.type=='dWP',]
i
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFrame0.R')
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFigures0.R')
source('/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/generateFigures0.R')
save.image("/media/eman/Datos/Curro/Proyectos/Clasificacion Celulas/filtro Alpha Borrador 2/enviorment.RData")
